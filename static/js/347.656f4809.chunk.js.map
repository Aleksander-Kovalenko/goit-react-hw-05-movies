{"version":3,"file":"static/js/347.656f4809.chunk.js","mappings":"ySAAMA,EAAQC,EAAAA,MAAAA,QAERC,EAAU,mCACVC,EAAW,+BAAjB,SAEeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,WAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,yGAA8BC,EAA9B,+BAAoC,GAApC,kBAEkCL,EAAMM,IAAID,GAF5C,cAEUE,EAFV,yBAGWA,EAAgBC,MAH3B,gCAKIC,QAAQC,IAAR,MALJ,iFASO,IAAMC,EAAuB,WAClC,OAAOP,EAAe,GAAD,OAAID,EAAJ,qCAAyCD,KAGnDU,EAAkB,WAAiB,IAAhBC,EAAe,uDAAP,GACtC,OAAOT,EAAe,GAAD,OAAID,EAAJ,iCAAqCD,EAArC,kBAAsDW,KAGhEC,EAAe,SAAAC,GAC1B,OAAOX,EAAe,GAAD,OAAID,EAAJ,kBAAsBY,EAAtB,oBAA0Cb,KAGpDc,EAAU,SAAAD,GACrB,OAAOX,EAAe,GAAD,OAAID,EAAJ,kBAAsBY,EAAtB,4BAAkDb,KAG5De,EAAa,SAAAF,GACxB,OAAOX,EAAe,GAAD,OAAID,EAAJ,kBAAsBY,EAAtB,4BAAkDb,M,2FCiBzE,UA3CyB,WACvB,IAAQgB,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAA0BE,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,MAIAC,EAAAA,EAAAA,YAAU,YACRT,EAAAA,EAAAA,IAAaI,GAAIM,KAAKF,KACrB,CAACJ,IAEJ,IAAMO,GAAaC,EAAAA,EAAAA,MAEnB,OACE,iCACE,mBAAQC,KAAK,SAASC,QAAS,kBAAMH,GAAY,IAAjD,qBAGCJ,IACC,qBAASQ,MAAO,GAAhB,WACE,gBAAKA,MAAO,CAAEC,YAAa,QAA3B,UACE,gBACEC,IAAG,UAjBM,wDAiBN,OAAoBV,EAAMW,aAC7BC,IAAKZ,EAAMa,eACXL,MAAO,CAAEM,MAAO,cAGpB,4BACE,uBAAId,EAAMa,kBACV,uBAAIb,EAAMe,gBACV,uBAAIf,EAAMgB,mBAGZ,4BACE,SAAC,KAAD,CAASC,GAAG,OAAZ,kBADF,KACoC,mBAClC,SAAC,KAAD,CAASA,GAAG,UAAZ,4BAIN,SAAC,KAAD","sources":["components/service/ServiceAPI.js","components/views/MovieDetailsView.jsx"],"sourcesContent":["const axios = require('axios').default;\r\n\r\nconst API_KEY = '8b5f28a2836b483110232092b0d0adcf';\r\nconst BASE_URL = 'https://api.themoviedb.org/3';\r\n\r\nasync function getFetchMovies(url = '') {\r\n  try {\r\n    const fetchCollection = await axios.get(url);\r\n    return fetchCollection.data;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nexport const getTrendingMoviesDay = () => {\r\n  return getFetchMovies(`${BASE_URL}/trending/all/day?api_key=${API_KEY}`);\r\n};\r\n\r\nexport const getSearchMovies = (query = '') => {\r\n  return getFetchMovies(`${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}`);\r\n};\r\n\r\nexport const getMovieById = movie_id => {\r\n  return getFetchMovies(`${BASE_URL}/movie/${movie_id}?api_key=${API_KEY}`);\r\n};\r\n\r\nexport const getCast = movie_id => {\r\n  return getFetchMovies(`${BASE_URL}/movie/${movie_id}/credits?api_key=${API_KEY}`);\r\n};\r\n\r\nexport const getReviews = movie_id => {\r\n  return getFetchMovies(`${BASE_URL}/movie/${movie_id}/reviews?api_key=${API_KEY}`);\r\n};\r\n","import { useEffect, useState } from 'react';\r\nimport { Outlet, useNavigate, useParams } from 'react-router';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { getMovieById } from '../service/ServiceAPI';\r\n\r\nconst MovieDetailsView = () => {\r\n  const { id } = useParams();\r\n  const [movie, setMovie] = useState(null);\r\n\r\n  const BASE_IMG_URL = 'https://www.themoviedb.org/t/p/w600_and_h900_bestv2/';\r\n\r\n  useEffect(() => {\r\n    getMovieById(id).then(setMovie);\r\n  }, [id]);\r\n\r\n  const navigation = useNavigate();\r\n\r\n  return (\r\n    <>\r\n      <button type=\"button\" onClick={() => navigation(-1)}>\r\n        Go Back\r\n      </button>\r\n      {movie && (\r\n        <article style={{}}>\r\n          <div style={{ marginRight: '20px' }}>\r\n            <img\r\n              src={`${BASE_IMG_URL}${movie.poster_path}`}\r\n              alt={movie.original_title}\r\n              style={{ width: '300px' }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <p>{movie.original_title}</p>\r\n            <p>{movie.release_date}</p>\r\n            <p>{movie.vote_average}</p>\r\n          </div>\r\n\r\n          <div>\r\n            <NavLink to=\"cast\">Cast</NavLink> <br />\r\n            <NavLink to=\"reviews\">Reviews</NavLink>\r\n          </div>\r\n        </article>\r\n      )}\r\n      <Outlet />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MovieDetailsView;\r\n"],"names":["axios","require","API_KEY","BASE_URL","getFetchMovies","url","get","fetchCollection","data","console","log","getTrendingMoviesDay","getSearchMovies","query","getMovieById","movie_id","getCast","getReviews","id","useParams","useState","movie","setMovie","useEffect","then","navigation","useNavigate","type","onClick","style","marginRight","src","poster_path","alt","original_title","width","release_date","vote_average","to"],"sourceRoot":""}