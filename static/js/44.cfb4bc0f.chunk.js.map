{"version":3,"file":"static/js/44.cfb4bc0f.chunk.js","mappings":"wPAEaA,EAAWC,EAAAA,EAAAA,GAAH,2FAORC,EAAWD,EAAAA,EAAAA,GAAH,kKASRE,EAAMF,EAAAA,EAAAA,IAAH,4F,SCehB,EA5Ba,WACX,IAAQG,GAAOC,EAAAA,EAAAA,MAAPD,GAER,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAQA,OAJAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAQN,GAAIO,MAAK,SAAAC,GAAQ,OAAIJ,EAAQI,EAASL,WAC7C,CAACH,KAGF,+BACE,SAACJ,EAAD,UACGO,EAAKM,KAAI,SAAAC,GACR,OACE,UAACZ,EAAD,YACE,SAACC,EAAD,CAAKY,IAAG,UAZC,wDAYD,OAAoBD,EAAKE,cAAgBC,IAAKH,EAAKI,QAC3D,uCAAeJ,EAAKK,cACpB,uBAAIL,EAAKI,SAHIJ,EAAKM,kB,uLCrB1BC,EAAQC,EAAAA,MAAAA,QAERC,EAAU,mCACVC,EAAW,+BAAjB,SAEeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,WAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,yGAA8BC,EAA9B,+BAAoC,GAApC,kBAEkCL,EAAMM,IAAID,GAF5C,cAEUE,EAFV,yBAGWA,EAAgBC,MAH3B,gCAKIC,QAAQC,IAAR,MALJ,iFASO,IAAMC,EAAuB,WAClC,OAAOP,EAAe,GAAD,OAAID,EAAJ,qCAAyCD,KAGnDU,EAAkB,WAAiB,IAAhBC,EAAe,uDAAP,GACtC,OAAOT,EAAe,GAAD,OAAID,EAAJ,iCAAqCD,EAArC,kBAAsDW,KAGhEC,EAAe,SAAAC,GAC1B,OAAOX,EAAe,GAAD,OAAID,EAAJ,kBAAsBY,EAAtB,oBAA0Cb,KAGpDb,EAAU,SAAA0B,GACrB,OAAOX,EAAe,GAAD,OAAID,EAAJ,kBAAsBY,EAAtB,4BAAkDb,KAG5Dc,EAAa,SAAAD,GACxB,OAAOX,EAAe,GAAD,OAAID,EAAJ,kBAAsBY,EAAtB,4BAAkDb","sources":["components/Card/Card.styled.jsx","components/Card/Cast.jsx","components/service/ServiceAPI.js"],"sourcesContent":["import styled from '@emotion/styled';\r\n\r\nexport const CastList = styled.ul`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  margin: 0;\r\n  padding: 0;\r\n`;\r\n\r\nexport const CastItem = styled.li`\r\n  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);\r\n\r\n  width: 25%;\r\n  margin: 0;\r\n  padding: 0;\r\n  text-align: center;\r\n  min-height: 100px;\r\n`;\r\nexport const Img = styled.img`\r\n  display: block;\r\n  padding: 0;\r\n  margin: 0;\r\n  max-width: 100%;\r\n`;\r\n","import { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport { getCast } from '../service/ServiceAPI';\r\nimport { CastList, CastItem, Img } from './Card.styled';\r\n\r\nconst Cast = () => {\r\n  const { id } = useParams();\r\n\r\n  const [cast, setCast] = useState([]);\r\n\r\n  const BASE_IMG_URL = 'https://www.themoviedb.org/t/p/w600_and_h900_bestv2/';\r\n\r\n  useEffect(() => {\r\n    getCast(id).then(response => setCast(response.cast));\r\n  }, [id]);\r\n\r\n  return (\r\n    <>\r\n      <CastList>\r\n        {cast.map(item => {\r\n          return (\r\n            <CastItem key={item.cast_id}>\r\n              <Img src={`${BASE_IMG_URL}${item.profile_path}`} alt={item.name} />\r\n              <h3>In movie: {item.character}</h3>\r\n              <p>{item.name}</p>\r\n            </CastItem>\r\n          );\r\n        })}\r\n      </CastList>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Cast;\r\n","const axios = require('axios').default;\r\n\r\nconst API_KEY = '8b5f28a2836b483110232092b0d0adcf';\r\nconst BASE_URL = 'https://api.themoviedb.org/3';\r\n\r\nasync function getFetchMovies(url = '') {\r\n  try {\r\n    const fetchCollection = await axios.get(url);\r\n    return fetchCollection.data;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nexport const getTrendingMoviesDay = () => {\r\n  return getFetchMovies(`${BASE_URL}/trending/all/day?api_key=${API_KEY}`);\r\n};\r\n\r\nexport const getSearchMovies = (query = '') => {\r\n  return getFetchMovies(`${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}`);\r\n};\r\n\r\nexport const getMovieById = movie_id => {\r\n  return getFetchMovies(`${BASE_URL}/movie/${movie_id}?api_key=${API_KEY}`);\r\n};\r\n\r\nexport const getCast = movie_id => {\r\n  return getFetchMovies(`${BASE_URL}/movie/${movie_id}/credits?api_key=${API_KEY}`);\r\n};\r\n\r\nexport const getReviews = movie_id => {\r\n  return getFetchMovies(`${BASE_URL}/movie/${movie_id}/reviews?api_key=${API_KEY}`);\r\n};\r\n"],"names":["CastList","styled","CastItem","Img","id","useParams","useState","cast","setCast","useEffect","getCast","then","response","map","item","src","profile_path","alt","name","character","cast_id","axios","require","API_KEY","BASE_URL","getFetchMovies","url","get","fetchCollection","data","console","log","getTrendingMoviesDay","getSearchMovies","query","getMovieById","movie_id","getReviews"],"sourceRoot":""}